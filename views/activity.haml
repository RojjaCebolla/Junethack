%script{:type => "text/javascript", :src => "https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"}
%script{:type => "text/javascript", :src => "/graph/highcharts.js"}
%script{:type => "text/javascript", :src => "/graph/graph_ascensions.js"}
%script{:type => "text/javascript", :src => "/graph/graph_finished_games_per_day.js"}
%script{:type => "text/javascript", :src => "/graph/graph_new_users_per_day.js"}

.content_bulk
  .text_content_wrapper
    - cache_fragment("games_variants_#{Game.max_endtime}") do
      .text_content
        %h2 Finished Games per Day and Variant
        .scorelisting
          %table.greytable.misc
            -# table header
            %tr
              %th Date (UTC)
              - $variants.each do |v|
                %th= $variants_mapping[v]

            -# table data
            - count = 0
            - today = Time.now.to_i
            - $tournament_starttime.step($tournament_endtime,86400).each do |datum|
              - if today > datum then
                - style = (count % 2) == 0 ? "cell1" : "cell2"
                - count += 1
                %tr{:id => style}
                  %td.table_date= h Time.at(datum).getutc.strftime("%Y-%m-%d")
                  - $variants.each do |v|
                    - finished_variant_games_per_day = (repository.adapter.select "select count(1) from games where user_id > 0 and version = ? and endtime >= ? and endtime < ?;", v, datum, datum+86400)[0]
                    %td.table_number= finished_variant_games_per_day
            -# Total number of tournament games per variant
            - style = (count % 2) == 0 ? "cell1" : "cell2"
            %tr{:id => style}
              %td.table_date= "Total"
              - $variants.each do |v|
                - finished_variant_games = (repository.adapter.select "select count(1) from games where user_id > 0 and version = ?;", v)[0]
                %td.table_number= finished_variant_games

    - cache_fragment("ascensions_#{Game.max_ascended_endtime}") do
      // Ugly SQL to also get days with zero ascensions. Will only work
      // as long there are any games for each day
      - @ascensions_per_day = repository.adapter.select "select days.datum, endtime, count from (select endtime, date(endtime, 'unixepoch') as datum from games group by datum) days left join (select datum, count(1) as count from (select date(endtime, 'unixepoch') as datum from games where user_id is not null and ascended='t') group by datum) counts on counts.datum = days.datum;"
      .text_content.non_top_post
        %h2 Ascensions per Day
        .scorelisting
          %table.greytable.misc
            %tr
              %th Date (UTC)
              %th
            - graph = Graph.new
            - count = 0
            - @ascensions_per_day.each do |game|
              - graph.add_data_point(game.datum, game.count)
              - style = (count % 2) == 0 ? "cell1" : "cell2"
              - count += 1
              %tr{:id => style}
                %td.table_date= h game.datum
                %td.table_number= game.count ? game.count : 0
                - if count == 1
                  %td.chart{:rowspan => @ascensions_per_day.size}
                    %div{:id => "chart_ascensions"}
            -# Total number of ascended tournament games
            - style = (count % 2) == 0 ? "cell1" : "cell2"
            %tr{:id => style}
              %td.table_date= "Total"
              %td.table_number= (repository.adapter.select "select count(1) from games where user_id > 0 and ascended='t';")[0]
          - graph.write("activity")


    - cache_fragment("games_#{Game.max_endtime}") do
      - @finished_games_per_day = repository.adapter.select "select datum, count(1) as count from (select date(endtime, 'unixepoch') as datum from games where user_id is not null) group by datum order by datum asc;"
      .text_content.non_top_post
        %h2 Finished Games per Day
        .scorelisting
          %table.greytable.misc
            %tr
              %th Date (UTC)
              %th
            - graph = Graph.new
            - count = 0
            - @finished_games_per_day.each do |game|
              - graph.add_data_point(game.datum, game.count)
              - style = (count % 2) == 0 ? "cell1" : "cell2"
              - count += 1
              %tr{:id => style}
                %td.table_date= h game.datum
                %td.table_number= game.count
                - if count == 1
                  %td.chart{:rowspan => @finished_games_per_day.size}
                    %div{:id => "chart_finished_games_per_day"}
            -# Total number of played tournament games
            - style = (count % 2) == 0 ? "cell1" : "cell2"
            %tr{:id => style}
              %td.table_date= "Total"
              %td.table_number= (repository.adapter.select "select count(1) from games where user_id > 0;")[0]
          - graph.write("finished_games_per_day")

    - cache_fragment("users_#{User.max_created_at}") do
      - @new_users_per_day = repository.adapter.select "select date(created_at) as date, count(1) as count from users group by date(created_at);"

      - signupstarttime = Time.at($tournament_signupstarttime).to_date
      - endtime = Time.at([$tournament_endtime, Time.now.to_i].min).to_date
      - @days = (signupstarttime..endtime).collect {|d| d.to_s}

      .text_content.non_top_post
        %h2 New Users per Day
        .scorelisting
          %table.greytable.misc
            %tr
              %th Date (UTC)
              %th
            - graph = Graph.new
            - count = 0
            - @days.each do |day|
              - game = @new_users_per_day.select{|g| g.date == day}.first || (Struct.new :date, :count).new(day, 0)

              - graph.add_data_point(game.date, game.count)
              - style = (count % 2) == 0 ? "cell1" : "cell2"
              - count += 1
              %tr{:id => style}
                %td.table_date= h game.date
                %td.table_number= game.count ? game.count : 0
                - if count == 1
                  %td.chart{:rowspan => @days.size}
                    %div{:id => "chart_new_users_per_day"}
            -# Total number of registered users
            - style = (count % 2) == 0 ? "cell1" : "cell2"
            %tr{:id => style}
              %td.table_date= "Total"
              %td.table_number= (repository.adapter.select "select count(1) from users;")[0]
          - graph.write("new_users_per_day")
