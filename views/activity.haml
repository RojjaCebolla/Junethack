.content_bulk
  .text_content_wrapper
    - cache_fragment("ascensions_#{Game.max_ascended_endtime}") do
      // Ugly SQL to also get days with zero ascensions. Will only work
      // as long there are any games for each day
      - @ascensions_per_day = repository.adapter.select "select days.datum, endtime, count from (select endtime, date(endtime, 'unixepoch') as datum from games group by datum) days left join (select datum, count(1) as count from (select date(endtime, 'unixepoch') as datum from games where user_id is not null and ascended='t') group by datum) counts on counts.datum = days.datum;"
      .text_content
        %h2 Ascensions per Day
        .scorelisting
          %img{:src => "tmp/activity.png", :style => "float: right"}
          %table.greytable.misc
            %tr
              %th Date (UTC)
              %th
            - graph = Graph.new
            - count = 0
            - @ascensions_per_day.each do |game|
              - graph.add_data_point(game.datum, game.count)
              - style = (count % 2) == 0 ? "cell1" : "cell2"
              - count += 1
              %tr{:id => style}
                %td.table_date= h game.datum
                %td.table_number= game.count ? game.count : 0
          - graph.write("activity.png")


    - cache_fragment("games_#{Game.max_endtime}") do
      - @finished_games_per_day = repository.adapter.select "select datum, count(1) as count from (select date(endtime, 'unixepoch') as datum from games where user_id is not null) group by datum order by datum asc;"
      .text_content.non_top_post
        %h2 Finished Games per Day
        %img{:src => "tmp/finished_games_per_day.png", :style => "float: right"}
        .scorelisting
          %table.greytable.misc
            %tr
              %th Date (UTC)
              %th
            - graph = Graph.new
            - count = 0
            - @finished_games_per_day.each do |game|
              - graph.add_data_point(game.datum, game.count)
              - style = (count % 2) == 0 ? "cell1" : "cell2"
              - count += 1
              %tr{:id => style}
                %td.table_date= h game.datum
                %td.table_number= game.count
          - graph.write("finished_games_per_day.png")

    - cache_fragment("users_#{User.max_created_at}") do
      // same comment as for @ascensions_per_day applies
      - @new_users_per_day = repository.adapter.select "select days.date, endtime, count from (select endtime, date(endtime, 'unixepoch') as date from games group by date) days left join (select date, count(1) as count from (select date(created_at) as date from users where created_at is not null) group by date) counts on counts.date = days.date;"
      .text_content.non_top_post
        %h2 New Users per Day
        .scorelisting
          %table.greytable.misc
            %tr
              %th Date (UTC)
              %th
            - count = 0
            - @new_users_per_day.each do |game|
              - style = (count % 2) == 0 ? "cell1" : "cell2"
              - count += 1
              %tr{:id => style}
                %td.table_date= h game.date
                %td.table_number= game.count ? game.count : 0
